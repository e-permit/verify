{"version":3,"sources":["PermitView.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","dividerFullWidth","margin","spacing","dividerInset","layout","marginLeft","marginRight","breakpoints","up","marginTop","marginBottom","padding","CredentialView","permit","locale","console","log","classes","className","Paper","Typography","component","variant","align","List","ListItem","ListItemText","primary","Alert","severity","valid_signature_message","Divider","issuer_label","secondary","Grid","container","alignItems","item","src","issuer","toLowerCase","height","issued_for_label","issued_for","issued_at_label","issued_at","expire_at_label","expire_at","permit_id_label","id","permit_type_label","type","permit_year_label","year","plate_number_label","plate_number","company_name_label","company_name","ajv","Ajv","rs","require","base64url","AUTHORITIES_URL","validatePermit","qrCode","a","fetch","schemaRes","json","schema","parseQrCodeResult","parseQrCode","ok","errorCode","version","header","payload","jws","getPermit","authoritiesRes","authoritiesJson","authorities","authoritiyUri","getUri","authorityConfigRes","authorityConfig","publicJwk","getPublicJwk","kid","pubKey","KEYUTIL","getKey","jwk","KJUR","JWS","verify","alg","localeR","localeContent","arr","split","JSON","parse","decode","validate","compile","sig","error","errors","trustedAuthority","trusted_authorities","find","x","code","Object","keys","length","publicKey","claims","iat","exp","pn","cn","v","issuedFor","AUD_URI","aud","demo_uri","uri","App","useState","setPermit","loading","setLoading","setError","setLocale","window","location","hash","substring","res","useEffect","verifyPermit","CircularProgress","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","event","respondWith","request","caches"],"mappings":"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","file":"static/js/main.b33e080e.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 500,\n        backgroundColor: theme.palette.background.paper\n    },\n    dividerFullWidth: {\n        margin: `5px 0 0 ${theme.spacing(2)}px`\n    },\n    dividerInset: {\n        margin: `5px 0 0 ${theme.spacing(9)}px`\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n}));\n\nexport default function CredentialView({ permit, locale }) {\n    console.log(locale);\n    const classes = useStyles();\n    return (\n        <main className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Typography component=\"h4\" variant=\"h5\" align=\"center\">\n                    E-PERMIT VERIFICATION\n                </Typography>\n                <List className={classes.root}>\n                    <ListItem>\n                        <ListItemText\n                            primary={\n                                <Alert severity=\"success\">\n                                    {locale.valid_signature_message}\n                                </Alert>\n                            }\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.issuer_label}\n                            secondary={\n                                <div className={classes.root}>\n                                    <Grid container alignItems=\"center\" spacing={3}>\n                                        <Grid item>\n                                            <img src={`/verify/flags/${permit.issuer.toLowerCase()}.svg`}  width=\"40\" height=\"25\" />\n                                        </Grid>\n                                        <Grid item>{locale[\"authority_name_\" + permit.issuer.toLowerCase()]}</Grid>\n                                    </Grid>\n                                </div>\n                            }\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.issued_for_label}\n                            secondary={\n                                <div className={classes.root}>\n                                    <Grid container alignItems=\"center\" spacing={3}>\n                                        <Grid item>\n                                            <img src={`/verify/flags/${permit.issued_for.toLowerCase()}.svg`}  width=\"40\" height=\"25\" />\n                                        </Grid>\n                                        <Grid item>{locale[\"authority_name_\" + permit.issued_for.toLowerCase()]}</Grid>\n                                    </Grid>\n                                </div>\n                            } />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.issued_at_label}\n                            secondary={<div className={classes.root}>{permit.issued_at}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.expire_at_label}\n                            secondary={<div className={classes.root}>{permit.expire_at}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.permit_id_label}\n                            secondary={<div className={classes.root}>{permit.id}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.permit_type_label}\n                            secondary={<div className={classes.root}>{locale[\"permit_type_\" + permit.type + \"_text\"]}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.permit_year_label}\n                            secondary={<div className={classes.root}>{permit.year}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.plate_number_label}\n                            secondary={<div className={classes.root}>{permit.plate_number}</div>}\n                        />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                    <ListItem>\n                        <ListItemText\n                            primary={locale.company_name_label}\n                            secondary={<div className={classes.root}>{permit.company_name}</div>}\n                        />\n                    </ListItem>\n                </List>\n            </Paper>\n        </main>\n    );\n}\n","import Ajv from \"ajv\"\nconst ajv = new Ajv();\nconst rs = require(\"jsrsasign\");\nconst base64url = require(\"base64-url\");\nconst AUTHORITIES_URL = \"/verify/authorities.json\";\n\nexport async function validatePermit(qrCode) {\n    const schemaRes = await fetch(\"/verify/schema.json\");\n    console.log(schemaRes);\n    const schema = await schemaRes.json();\n    const parseQrCodeResult = parseQrCode(qrCode, schema);\n    if (!parseQrCodeResult.ok) {\n        return { ok: false, errorCode: \"invalid_format\" };\n    }\n\n    const { version, header, payload, jws } = parseQrCodeResult;\n    const permit = getPermit(payload);\n    const authoritiesRes = await fetch(AUTHORITIES_URL);\n    const authoritiesJson = await authoritiesRes.json();\n    const authorities = authoritiesJson.authorities;\n    const authoritiyUri = getUri(version, authorities, permit.issued_for);\n    const authorityConfigRes = await fetch(authoritiyUri);\n    const authorityConfig = await authorityConfigRes.json();\n    const publicJwk = getPublicJwk(authorityConfig, permit.issuer, header.kid);\n    const pubKey = rs.KEYUTIL.getKey(publicJwk.jwk);\n    const isValid = rs.KJUR.jws.JWS.verify(jws, pubKey, [header.alg]);\n    if (!isValid) {\n        return { ok: false, errorCode: \"invalid_signature\" };\n    }\n    const locale = authorityConfig.locale || \"en\";\n    const localeR = await fetch(`/verify/locale/${locale}.json`);\n    const localeContent = await localeR.json();\n\n    return { ok: true, permit: permit, locale: localeContent };\n}\n\nexport function parseQrCode(qrCode, schema) {\n    const arr = qrCode.split(\".\");\n    const header = JSON.parse(base64url.decode(arr[1]));\n    const payload = JSON.parse(base64url.decode(arr[2]));\n    const validate = ajv.compile(schema);\n    const valid = validate({\n        version: arr[0],\n        header: header,\n        payload: payload,\n        sig: arr[3]\n    });\n\n    if (!valid) {\n        console.log(\"Validation error\");\n        console.error(validate.errors);\n        return { ok: false };\n    }\n    return {\n        ok: true,\n        version: arr[0],\n        payload: payload,\n        header: header,\n        jws: `${arr[1]}.${arr[2]}.${arr[3]}`\n    };\n}\n\nexport function getPublicJwk(authorityConfig, issuer, kid) {\n    const trustedAuthority = authorityConfig.trusted_authorities\n        .find((x) => x.code === issuer);\n    if (!trustedAuthority || Object.keys(trustedAuthority).length === 0) {\n        return { ok: false };\n    }\n    const publicKey = trustedAuthority.keys.find((x) => x.kid === kid);\n    if (!publicKey) {\n        return { ok: false };\n    }\n    return { ok: true, jwk: publicKey };\n}\n\nexport function getPermit(payload) {\n    const claims = payload.id.split(\"-\");\n    const permit = {\n        id: payload.id,\n        issuer: claims[0],\n        issued_for: claims[1],\n        year: claims[2],\n        type: claims[3],\n        issued_at: payload.iat,\n        expire_at: payload.exp,\n        plate_number: payload.pn,\n        company_name: payload.cn\n    }\n    return permit;\n}\n\nexport function getUri(v, authorities, issuedFor) {\n    let AUD_URI;\n    const aud = authorities.find((x) => x.code === issuedFor);\n    if (v === \"0\") {\n        AUD_URI = aud.demo_uri;\n    } else if (v === \"1\") {\n        AUD_URI = aud.uri;\n    }\n    return AUD_URI;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport PermitView from \"./PermitView\";\nimport { validatePermit } from \"./utils\";\n\nfunction App() {\n  const [permit, setPermit] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  const [locale, setLocale] = useState();\n  async function verifyPermit() {\n    try {\n      const jws = window.location.hash.substring(1);\n      const res = await validatePermit(jws);\n      if(res.ok){\n        setLocale(res.locale);\n        setPermit(res.permit);\n      }else{\n        setError(res.errorCode);\n      }\n      setLoading(false);\n    } catch(error) {\n      console.error(error);\n      setLoading(false);\n      setError(\"An error has occured\");\n    }\n  }\n  useEffect(() => verifyPermit(), []);\n\n  if (loading) {\n    return <CircularProgress />;\n  } else if (permit) {\n    return <PermitView permit={permit} locale={locale} />;\n  } else {\n    return (\n      <Alert severity=\"error\">\n        {error}\n      </Alert>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n\n    window.addEventListener('fetch', function (event) {\n      console.log(event);\n      event.respondWith(\n        fetch(event.request).catch(function () {\n          return caches.match(event.request)\n        })\n      )\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}