{"version":3,"sources":["context.js","components/SelectAuthority.js","utils.js","components/CredentialView.js","components/ScanResult.js","components/Scan.js","App.js","serviceWorker.js","index.js"],"names":["initialState","config","changes","revocations","reducer","state","action","type","change","AppContext","createContext","dispatch","AppProvider","children","useReducer","useEffect","a","get","persistedState","Object","keys","fetchUser","set","Provider","value","URL","process","AUTHORITIES_URL","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","grow","flexGrow","SelectAuthority","classes","useState","authorities","setAuthorities","React","useContext","fetch","res","json","result","fetchAuthorities","Paper","square","className","Typography","variant","gutterBottom","List","ListSubheader","map","id","uri","title","Fragment","key","ListItem","button","onClick","ListItemAvatar","Avatar","alt","src","ListItemText","primary","rs","require","base64url","ajv","Ajv","getCredential","cred","arr","split","jws","header","JSON","parse","decode","payload","validate","compile","schema","sig","alert","stringify","errors","isValid","errorCode","aud","iss","Math","floor","Date","now","exp","issuer","find","x","length","publicJwk","kid","pubKey","KEYUTIL","getKey","KJUR","JWS","verify","alg","root","width","maxWidth","dividerFullWidth","margin","dividerInset","CredentialView","props","locale","iat","sub","cid","ct","cy","comid","comn","iatDate","toLocaleDateString","expDate","Alert","severity","valid_signature_message","Divider","component","iss_label","secondary","Grid","container","alignItems","item","aud_label","iat_label","exp_label","sub_label","ct_label","cy_label","cid_label","comid_label","comn_label","res_label","ScanResult","setState","data","getResult","CircularProgress","appBar","top","bottom","fabButton","position","zIndex","left","right","Scan","page","pageState","setPageState","CssBaseline","delay","onError","err","console","error","onScan","style","AppBar","color","Toolbar","IconButton","edge","aria-label","Fab","Page","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","href","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68f82713.chunk.js","sourcesContent":["import React, { useEffect, useReducer, createContext } from \"react\";\nimport { set, get } from \"idb-keyval\";\nconst initialState = {\n  config: {},\n  changes: [],\n  revocations: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"init\":\n      return { ...action.state };\n    case \"login\":\n      return { ...state, config: action.config };\n    case \"addChange\":\n      return { ...state, changes: action.change };\n    case \"removeChanges\":\n      return { ...state, changes: [] };\n    default:\n      return initialState;\n  }\n}\n\nconst AppContext = createContext({\n  state: initialState,\n  dispatch: () => null\n});\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function fetchUser() {\n      let persistedState = await get(\"state\");\n      if (persistedState && Object.keys(persistedState.config) !== 0) {\n        dispatch({ type: \"reset\", state: persistedState });\n      }\n    }\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    set(\"state\", state);\n  }, [state]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider, AppContext };\n","//import DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\n//import CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { AppContext } from \"../context\";\n\nconst URL = process.env.AUTHORITIES_URL || \"https://e-permit.github.io/demo/authorities.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  grow: {\n    flexGrow: 1\n  }\n}));\n\nexport default function SelectAuthority() {\n  const classes = useStyles();\n  const [authorities, setAuthorities] = useState([]);\n  const { dispatch } = React.useContext(AppContext);\n\n  useEffect(() => {\n    async function fetchAuthorities() {\n      const res = await fetch(URL);\n      const result = await res.json();\n      setAuthorities(result.authorities);\n    }\n    fetchAuthorities();\n  }, [])\n  return (\n    <Paper square className={classes.paper}>\n      <Typography className={classes.text} variant=\"h5\" gutterBottom>\n        Authorities\n      </Typography>\n      <List className={classes.list}>\n        <ListSubheader className={classes.subheader}>\n          -- Select Authority --\n        </ListSubheader>\n        {authorities.map(({ id, uri, title }) => (\n          <React.Fragment key={id}>\n            <ListItem\n              button\n              onClick={async () => {\n                if (uri) {\n                  const res = await fetch(uri);\n                  let config = await res.json();\n                  dispatch({\n                    type: \"login\",\n                    config: config\n                  });\n                }\n              }\n              }\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Flag\"\n                  src={`https://www.countryflags.io/${id}/flat/64.png`}\n                />\n              </ListItemAvatar>\n              <ListItemText primary={title} />\n            </ListItem>\n          </React.Fragment>\n        ))}\n      </List>{\" \"}\n    </Paper>\n  );\n}\n","import Ajv from \"ajv\";\r\nimport * as schema from \"./schema.json\";\r\nconst rs = require(\"jsrsasign\");\r\nconst base64url = require(\"base64-url\");\r\nconst ajv = new Ajv();\r\n\r\nexport async function getCredential(cred, config) {\r\n  const arr = cred.split(\".\");\r\n  const version = arr[0];\r\n  if (version === \"v1\") {\r\n    const jws = arr[1] + \".\" + arr[2] + \".\" + arr[3];\r\n    const header = JSON.parse(base64url.decode(arr[1]));\r\n    const payload = JSON.parse(base64url.decode(arr[2]));\r\n    const validate = ajv.compile(schema);\r\n    const valid = validate({ header: header, payload: payload, sig: arr[3] });\r\n    if (!valid) {\r\n      alert(JSON.stringify(validate.errors));\r\n      return { isValid: false, errorCode: \"invalid_cred\" };\r\n    }\r\n    if (!(payload.aud === config.id || payload.iss === config.id)) {\r\n      return { isValid: false, errorCode: \"invalid_aud\" };\r\n    }\r\n    const clockTimestamp = Math.floor(Date.now() / 1000);\r\n    if (clockTimestamp >= payload.exp) {\r\n      return { isValid: false, errorCode: \"invalid_exp\" };\r\n    }\r\n    const issuer = config.authorities.find((x) => x.id === payload.iss);\r\n    if (!issuer || Object.keys(issuer).length === 0) {\r\n      return { isValid: false, errorCode: \"iss_notfound\" };\r\n    }\r\n    const publicJwk = issuer.keys.find((x) => x.kid === header.kid);\r\n    if (!publicJwk || Object.keys(publicJwk).length === 0) {\r\n      return { isValid: false, errorCode: \"jwk_notfound\" };\r\n    }\r\n    const pubKey = rs.KEYUTIL.getKey(publicJwk);\r\n    const isValid = rs.KJUR.jws.JWS.verify(jws, pubKey, [header.alg]);\r\n    if (!isValid) {\r\n      return { isValid: false, errorCode: \"invalid_signature\" };\r\n    }\r\n    /*if (revocations.some((x) => x.cid === payload.cid)) {\r\n      return { isValid: false, errorCode: \"revoked_cred\" };\r\n    }*/\r\n    //const convertedCred = convertPayload(payload, authority);\r\n    return { isValid: true, cred: payload };\r\n  }\r\n  return { isValid: false, errorCode: \"invalid_version\" };\r\n}\r\n/*export async function getCredential(encodedCred, authority, revocations) {\r\n  const cred = decodeCred(encodedCred);\r\n  var validate = ajv.compile(schema);\r\n  var valid = validate(cred);\r\n  if (!valid) {\r\n    alert(JSON.stringify(validate.errors));\r\n    return { isValid: false, errorCode: \"invalid_cred\" };\r\n  }\r\n  if (\r\n    !(cred.payload.aud === authority.id || cred.payload.iss === authority.id)\r\n  ) {\r\n    return { isValid: false, errorCode: \"invalid_aud\" };\r\n  }\r\n  const clockTimestamp = Math.floor(Date.now() / 1000);\r\n  if (clockTimestamp >= cred.payload.exp) {\r\n    return { isValid: false, errorCode: \"invalid_exp\" };\r\n  }\r\n  const issuer = authority.authorities.find((x) => x.id === cred.payload.iss);\r\n  if (!issuer || Object.keys(issuer).length === 0) {\r\n    return { isValid: false, errorCode: \"iss_notfound\" };\r\n  }\r\n  const publicJwk = issuer.keys.find((x) => x.kid === cred.header.kid);\r\n  if (!publicJwk || Object.keys(publicJwk).length === 0) {\r\n    return { isValid: false, errorCode: \"jwk_notfound\" };\r\n  }\r\n  const pubKey = rs.KEYUTIL.getKey(publicJwk);\r\n  const headerBase64 = base64url.encode(JSON.stringify(cred.header));\r\n  const payloadBase64 = base64url.encode(JSON.stringify(cred.payload));\r\n  const sigBase64 = base64url.encode(cred.sig, \"binary\");\r\n  const sJws = `${headerBase64}.${payloadBase64}.${sigBase64}`;\r\n  const isValid = rs.KJUR.jws.JWS.verify(sJws, pubKey, [cred.header.alg]);\r\n  if (!isValid) {\r\n    return { isValid: false, errorCode: \"invalid_signature\" };\r\n  }\r\n  if (revocations.some((x) => x.cred_id === cred.payload.cred_id)) {\r\n    return { isValid: false, errorCode: \"revoked_cred\" };\r\n  }\r\n  const convertedCred = convertPayload(cred.payload, authority);\r\n  return { isValid: true, cred: convertedCred };\r\n}\r\n\r\n\r\nexport function decodeCred(credStr) {\r\n  const cred = { header: {}, payload: {} };\r\n  cred.header.alg = \"ES256\";\r\n  cred.header.kid = credStr.substring(1, 2);\r\n  cred.sig = credStr.substring(2, 66);\r\n  cred.payload.iss = credStr.substring(66, 68);\r\n  cred.payload.aud = credStr.substring(68, 70);\r\n  cred.payload.iat = credStr.substring(70, 80);\r\n  cred.payload.exp = credStr.substring(80, 90);\r\n  cred.payload.cid = credStr.substring(90, 100);\r\n  cred.payload.ct = credStr.substring(100, 101);\r\n  cred.payload.cy = credStr.substring(101, 105);\r\n  const decoded = credStr.substring(105).split(\":\");\r\n  cred.payload.sub = decoded[0];\r\n  cred.payload.oid = decoded[1];\r\n  if (decoded[2]) {\r\n    cred.payload.on = decoded[2];\r\n  }\r\n  if (decoded[3]) {\r\n    cred.payload.res = decoded[3];\r\n  }\r\n  return cred;\r\n}\r\nfunction convertPayload(payload, authority) {\r\n  const iatDate = new Date(payload.iat * 1000).toLocaleDateString();\r\n  const expDate = new Date(payload.exp * 1000).toLocaleDateString();\r\n  //const issuer = authority.authorities.find((x) => x.id === payload.iss);\r\n  //const verifier = authority.authorities.find((x) => x.id === payload.aud);\r\n  const c = {\r\n    iatDate,\r\n    expDate,\r\n    issuer_code: issuer.id,\r\n    //issuer_name: issuer.name,\r\n    verifier_code: verifier.id,\r\n    //verifier_name: verifier.name,\r\n    sub: payload.sub,\r\n    cred_id: payload.cid,\r\n    cred_type: payload.ct,\r\n    cred_year: payload.cy,\r\n    org_id: payload.oid\r\n  };\r\n  if (payload.on) {\r\n    c.org_name = payload.on;\r\n  }\r\n  if (payload.res) {\r\n    c.restrictions = payload.res;\r\n  }\r\n\r\n  return c;\r\n}\r\n*/\r\n\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `5px 0 0 ${theme.spacing(2)}px`\r\n  },\r\n  dividerInset: {\r\n    margin: `5px 0 0 ${theme.spacing(9)}px`\r\n  }\r\n}));\r\n\r\nexport default function CredentialView(props) {\r\n  const classes = useStyles();\r\n  const  locale = props.locale;\r\n  const {\r\n    exp,\r\n    iat,\r\n    iss,\r\n    aud,\r\n    sub,\r\n    cid,\r\n    ct,\r\n    cy,\r\n    comid,\r\n    comn,\r\n    res\r\n  } = props.cred;\r\n  const iatDate = new Date(iat * 1000).toLocaleDateString();\r\n  const expDate = new Date(exp * 1000).toLocaleDateString();\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={\r\n            <Alert severity=\"success\">\r\n              {locale.valid_signature_message}\r\n            </Alert>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.iss_label}\r\n          secondary={\r\n            <div className={classes.root}>\r\n              <Grid container alignItems=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"Flag\"\r\n                    src={`https://www.countryflags.io/${iss}/flat/32.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item>{locale[\"authority_name_\" + iss]}</Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.aud_label}\r\n          secondary={\r\n            <div className={classes.root}>\r\n              <Grid container alignItems=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"Flag\"\r\n                    src={`https://www.countryflags.io/${aud}/flat/32.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item>{locale[\"authority_name_\" + aud]}</Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.iat_label}\r\n          secondary={<div className={classes.root}>{iatDate}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.exp_label}\r\n          secondary={<div className={classes.root}>{expDate}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.sub_label}\r\n          secondary={<div className={classes.root}>{sub}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.ct_label}\r\n          secondary={<div className={classes.root}>{locale[\"ct_\" + ct + \"_text\"]}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.cy_label}\r\n          secondary={<div className={classes.root}>{cy}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.cid_label}\r\n          secondary={<div className={classes.root}>{cid}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={locale.comid_label}\r\n          secondary={<div className={classes.root}>{comid}</div>}\r\n        />\r\n      </ListItem>\r\n\r\n      {comn && (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Divider component=\"li\" />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={locale.comn_label}\r\n              secondary={\r\n                <div className={classes.root}>{comn}</div>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )}\r\n      {res && (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Divider component=\"li\" />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={locale.res_label}\r\n              secondary={\r\n                <div className={classes.root}>{res}</div>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getCredential } from \"../utils\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CredentialView from \"./CredentialView\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function ScanResult(props) {\r\n  const [state, setState] = useState();\r\n  useEffect(() => {\r\n    async function getResult() {\r\n      try {\r\n        const result = await getCredential(\r\n          props.data,\r\n          props.config,\r\n          props.revocations\r\n        );\r\n        setState(result);\r\n      }\r\n      catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n    getResult();\r\n  }, [props]);\r\n  if (!state) {\r\n    return <CircularProgress />;\r\n  } else if (state.isValid) {\r\n    return <CredentialView cred={state.cred} locale={props.config.locale} />;\r\n  }  else {\r\n    return (\r\n      <Alert severity=\"error\">\r\n        {props.config.locale[state.errorCode + \"_message\"]}\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\n/*if (state.isValid) {\r\n    return (\r\n      <List className={classes.root}>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Issuer\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                <Grid container alignItems=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"Flag\"\r\n                      src={`https://www.countryflags.io/${state.cred.issuer_code}/flat/32.png`}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>{state.cred.issuer_title}</Grid>\r\n                </Grid>\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider component=\"li\" />\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Issuance Date\"\r\n            secondary={<div className={classes.root}>{state.cred.iatDate}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Expiration Date\"\r\n            secondary={<div className={classes.root}>{state.cred.expDate}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Vehicle Registration Plate\"\r\n            secondary={<div className={classes.root}>{state.cred.vrp}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Organization\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                {state.cred.org_id}-{state.cred.org_name}\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Type - Year\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                {state.cred.cred_type}-{state.cred.cred_year}\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    );\r\n  }\r\n  }*/\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport { AppContext } from \"../context\";\nimport QrReader from \"react-qr-reader\";\nimport ScanResult from \"./ScanResult\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\"\n  }\n}));\n\nexport default function Scan() {\n  const classes = useStyles();\n  const { state } = React.useContext(AppContext);\n  const [pageState, setPageState] = useState({ page: \"scan\", data: \"\" });\n  async function handleScan(data) {\n    if (data) {\n      setPageState({ page: \"result\", data: data });\n    }\n  }\n  function handleError(err) {\n    console.error(err);\n  }\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square variant=\"outlined\" className={classes.paper}>\n        {pageState.page === \"result\" ? (\n          <ScanResult\n            data={pageState.data}\n            config={state.config}\n            revocations={state.revocations}\n          />\n        ) : (\n            <QrReader\n              delay={300}\n              onError={handleError}\n              onScan={handleScan}\n              style={{ width: \"100%\" }}\n            />\n          )}\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <img\n              alt=\"Flag\"\n              src={`https://www.countryflags.io/${state.config.id}/flat/32.png`}\n            />\n          </IconButton>\n          {state.config.locale[\"authority_name_\" + state.config.id]}\n\n          {Object.keys(state.config).length !== 0 && (\n            <Fab\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                setPageState({ page: \"scan\", data: \"\" });\n              }}\n            >\n              <CropFreeIcon />\n            </Fab>\n          )}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { AppProvider, AppContext } from \"./context\";\nimport SelectAuthority from \"./components/SelectAuthority\";\nimport Scan from \"./components/Scan\";\n\nfunction Page() {\n  const { state } = React.useContext(AppContext);\n  return (\n    <React.Fragment>\n      {Object.keys(state.config).length === 0 ? (\n        <SelectAuthority />\n      ) : (\n        <Scan />\n      )}\n    </React.Fragment>\n  );\n}\nfunction App() {\n  return (\n    <AppProvider>\n      <Page />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}