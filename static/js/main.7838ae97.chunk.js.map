{"version":3,"sources":["context.js","components/SelectAuthority.js","utils.js","components/CredentialView.js","components/ScanResult.js","components/Scan.js","App.js","serviceWorker.js","index.js"],"names":["initialState","authority","changes","revocations","credential","reducer","state","action","type","change","AppContext","createContext","dispatch","AppProvider","children","useReducer","useEffect","a","get","persistedState","Object","keys","fetchUser","set","Provider","value","authorities","id","uri","title","useStyles","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","grow","flexGrow","SelectAuthority","classes","React","useContext","Paper","square","className","Typography","variant","gutterBottom","List","ListSubheader","map","Fragment","key","ListItem","button","onClick","fetch","res","json","ListItemAvatar","Avatar","alt","src","ListItemText","primary","rs","require","base64url","ajv","Ajv","getCredential","encodedCred","cred","decodeCred","validate","compile","schema","console","log","errors","isValid","errorCode","payload","aud","iss","Math","floor","Date","now","exp","issuer","find","x","length","publicJwk","kid","header","pubKey","KEYUTIL","getKey","headerBase64","encode","JSON","stringify","payloadBase64","sigBase64","sig","sJws","KJUR","jws","JWS","verify","alg","some","cred_id","convertedCred","convertPayload","iatDate","iat","toLocaleDateString","expDate","verifier","c","issuer_code","issuer_name","verifier_code","verifier_name","sub","cid","cred_type","titles","ct","cred_year","cy","org_id","oid","on","org_name","restrictions","credStr","decoded","split","fixedFields","toString","substring","root","width","maxWidth","dividerFullWidth","margin","dividerInset","CredentialView","props","Alert","severity","valid_signature_message","Divider","component","secondary","Grid","container","alignItems","item","ScanResult","useState","setState","data","result","alert","getResult","invalid_signature_message","CircularProgress","appBar","top","bottom","fabButton","position","zIndex","left","right","Scan","page","pageState","setPageState","CssBaseline","delay","onError","err","error","onScan","style","AppBar","color","Toolbar","IconButton","edge","aria-label","Fab","Page","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7838ae97.chunk.js","sourcesContent":["import React, { useEffect, useReducer, createContext } from \"react\";\nimport { set, get } from \"idb-keyval\";\nconst initialState = {\n  authority: {},\n  changes: [],\n  revocations: [],\n  credential: {} // error - view\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"init\":\n      return { ...action.state };\n    case \"login\":\n      return { ...state, authority: action.authority };\n    case \"addChange\":\n      return { ...state, changes: action.change };\n    case \"removeChanges\":\n      return { ...state, changes: [] };\n    default:\n      return initialState;\n  }\n}\n\nconst AppContext = createContext({\n  state: initialState,\n  dispatch: () => null\n});\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    async function fetchUser() {\n      let persistedState = await get(\"state\");\n      if (persistedState && Object.keys(persistedState.authority) !== 0) {\n        dispatch({ type: \"reset\", state: persistedState });\n      }\n    }\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    set(\"state\", state);\n  }, [state]);\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport { AppProvider, AppContext };\n","//import DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\n//import CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { AppContext } from \"../context\";\n\nconst authorities = [\n  {\n    id: \"tr\",\n    uri: \"/verify/tr.json\",\n    title: \"Republic Of Turkey\"\n  },\n  {\n    id: \"ua\",\n    uri: \"/verify/ua.json\",\n    title: \"Ukraine\"\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  grow: {\n    flexGrow: 1\n  }\n}));\n\nexport default function SelectAuthority() {\n  const classes = useStyles();\n  const { dispatch } = React.useContext(AppContext);\n  return (\n    <Paper square className={classes.paper}>\n      <Typography className={classes.text} variant=\"h5\" gutterBottom>\n        Authorities\n      </Typography>\n      <List className={classes.list}>\n        <ListSubheader className={classes.subheader}>\n          -- Select Authority --\n        </ListSubheader>\n        {authorities.map(({ id, uri, title }) => (\n          <React.Fragment key={id}>\n            <ListItem\n              button\n              onClick={async () => {\n                if (uri) {\n                  const res = await fetch(uri);\n                  let authority = await res.json();\n                  dispatch({\n                    type: \"login\",\n                    authority: authority\n                  });\n                }\n              }\n              }\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Flag\"\n                  src={`https://www.countryflags.io/${id}/flat/64.png`}\n                />\n              </ListItemAvatar>\n              <ListItemText primary={title} />\n            </ListItem>\n          </React.Fragment>\n        ))}\n      </List>{\" \"}\n    </Paper>\n  );\n}\n","import Ajv from \"ajv\";\r\nimport * as schema from \"./schema.json\";\r\nconst rs = require(\"jsrsasign\");\r\nconst base64url = require(\"base64-url\");\r\n\r\nconst ajv = new Ajv();\r\nexport async function getCredential(encodedCred, authority, revocations) {\r\n  const cred = decodeCred(encodedCred);\r\n  var validate = ajv.compile(schema);\r\n  var valid = validate(cred);\r\n  if (!valid) {\r\n    console.log(validate.errors);\r\n    return { isValid: false, errorCode: \"invalid_cred\" };\r\n  }\r\n  if (\r\n    !(cred.payload.aud === authority.id || cred.payload.iss === authority.id)\r\n  ) {\r\n    return { isValid: false, errorCode: \"invalid_aud\" };\r\n  }\r\n  const clockTimestamp = Math.floor(Date.now() / 1000);\r\n  if (clockTimestamp >= cred.payload.exp) {\r\n    return { isValid: false, errorCode: \"invalid_exp\" };\r\n  }\r\n  const issuer = authority.authorities.find((x) => x.id === cred.payload.iss);\r\n  if (!issuer || Object.keys(issuer).length === 0) {\r\n    return { isValid: false, errorCode: \"iss_notfound\" };\r\n  }\r\n  const publicJwk = issuer.keys.find((x) => x.kid === cred.header.kid);\r\n  if (!publicJwk || Object.keys(publicJwk).length === 0) {\r\n    return { isValid: false, errorCode: \"jwk_notfound\" };\r\n  }\r\n  const pubKey = rs.KEYUTIL.getKey(publicJwk);\r\n  const headerBase64 = base64url.encode(JSON.stringify(cred.header));\r\n  const payloadBase64 = base64url.encode(JSON.stringify(cred.payload));\r\n  const sigBase64 = cred.sig;\r\n  const sJws = `${headerBase64}.${payloadBase64}.${sigBase64}`;\r\n  const isValid = rs.KJUR.jws.JWS.verify(sJws, pubKey, [cred.header.alg]);\r\n  if (!isValid) {\r\n    console.log(sJws);\r\n    return { isValid: false, errorCode: \"invalid_signature\" };\r\n  }\r\n  if (revocations.some((x) => x.cred_id === cred.payload.cred_id)) {\r\n    return { isValid: false, errorCode: \"revoked_cred\" };\r\n  }\r\n  const convertedCred = convertPayload(cred.payload, authority);\r\n  return { isValid: true, cred: convertedCred };\r\n}\r\n\r\nfunction convertPayload(payload, authority) {\r\n  const iatDate = new Date(payload.iat * 1000).toLocaleDateString();\r\n  const expDate = new Date(payload.exp * 1000).toLocaleDateString();\r\n  const issuer = authority.authorities.find((x) => x.id === payload.iss);\r\n  const verifier = authority.authorities.find((x) => x.id === payload.aud);\r\n  const c = {\r\n    iatDate,\r\n    expDate,\r\n    issuer_code: issuer.id,\r\n    issuer_name: issuer.title,\r\n    verifier_code: verifier.id,\r\n    verifier_name: verifier.title,\r\n    sub: payload.sub,\r\n    cred_id: payload.cid,\r\n    cred_type: authority.titles[\"ct_\" + payload.ct],\r\n    cred_year: payload.cy,\r\n    org_id: payload.oid\r\n  };\r\n  if (payload.on) {\r\n    c.org_name = payload.on;\r\n  }\r\n  if (payload.res) {\r\n    c.restrictions = payload.res;\r\n  }\r\n\r\n  return c;\r\n}\r\n\r\nexport function decodeCred(credStr) {\r\n  const decoded = credStr.split(\":\");\r\n  const fixedFields = decoded[0].toString();\r\n  const version = fixedFields.substring(0, 1);\r\n  const cred = { header: {}, payload: {} };\r\n  cred.header.alg = \"ES256\";\r\n  cred.header.kid = fixedFields.substring(1, 2);\r\n  cred.sig = fixedFields.substring(2, 66);\r\n  cred.payload.iss = fixedFields.substring(66, 68);\r\n  cred.payload.aud = fixedFields.substring(68, 70);\r\n  cred.payload.iat = fixedFields.substring(70, 80);\r\n  cred.payload.exp = fixedFields.substring(80, 90);\r\n  cred.payload.cid = fixedFields.substring(90, 100);\r\n  const ct = fixedFields.substring(100, 101);\r\n  if (ct === \"1\") cred.payload.ct = \"biliteral\";\r\n  else if (ct === \"2\") cred.payload.ct = \"transit\";\r\n  else if (ct === \"3\") cred.payload.ct = \"3rdcountry\";\r\n  cred.payload.cy = fixedFields.substring(101, 105);\r\n\r\n  cred.payload.sub = decoded[1];\r\n  cred.payload.oid = decoded[2];\r\n  if (decoded[3]) {\r\n    cred.payload.on = decoded[3];\r\n  }\r\n  if (decoded[4]) {\r\n    cred.payload.res = decoded[4];\r\n  }\r\n  return cred;\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  dividerFullWidth: {\r\n    margin: `5px 0 0 ${theme.spacing(2)}px`\r\n  },\r\n  dividerInset: {\r\n    margin: `5px 0 0 ${theme.spacing(9)}px`\r\n  }\r\n}));\r\n\r\nexport default function CredentialView(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <List className={classes.root}>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={\r\n            <Alert severity=\"success\">\r\n              {props.authority.titles.valid_signature_message}\r\n            </Alert>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.iss}\r\n          secondary={\r\n            <div className={classes.root}>\r\n              <Grid container alignItems=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"Flag\"\r\n                    src={`https://www.countryflags.io/${props.cred.issuer_code}/flat/32.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item>{props.cred.issuer_name}</Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.aud}\r\n          secondary={\r\n            <div className={classes.root}>\r\n              <Grid container alignItems=\"center\" spacing={3}>\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"Flag\"\r\n                    src={`https://www.countryflags.io/${props.cred.verifier_code}/flat/32.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item>{props.cred.verifier_name}</Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.iat}\r\n          secondary={<div className={classes.root}>{props.cred.iatDate}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.exp}\r\n          secondary={<div className={classes.root}>{props.cred.expDate}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.sub}\r\n          secondary={<div className={classes.root}>{props.cred.sub}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.ct}\r\n          secondary={<div className={classes.root}>{props.cred.cred_type}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.cy}\r\n          secondary={<div className={classes.root}>{props.cred.cred_year}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.cid}\r\n          secondary={<div className={classes.root}>{props.cred.cred_id}</div>}\r\n        />\r\n      </ListItem>\r\n      <Divider component=\"li\" />\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={props.authority.titles.oid}\r\n          secondary={<div className={classes.root}>{props.cred.org_id}</div>}\r\n        />\r\n      </ListItem>\r\n\r\n      {props.cred.org_name && (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Divider component=\"li\" />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={props.authority.titles.on}\r\n              secondary={\r\n                <div className={classes.root}>{props.cred.org_name}</div>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )}\r\n      {props.cred.restrictions && (\r\n        <React.Fragment>\r\n          {\" \"}\r\n          <Divider component=\"li\" />\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={props.authority.titles.res}\r\n              secondary={\r\n                <div className={classes.root}>{props.cred.restrictions}</div>\r\n              }\r\n            />\r\n          </ListItem>\r\n        </React.Fragment>\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getCredential } from \"../utils\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport CredentialView from \"./CredentialView\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function ScanResult(props) {\r\n  const [state, setState] = useState();\r\n  useEffect(() => {\r\n    async function getResult() {\r\n      try {\r\n        const result = await getCredential(\r\n          props.data,\r\n          props.authority,\r\n          props.revocations\r\n        );\r\n        alert(JSON.stringify(result));\r\n        setState(result);\r\n      }\r\n      catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n    getResult();\r\n  }, [props]);\r\n  if (!state) {\r\n    return <CircularProgress />;\r\n  } else if (state.isValid) {\r\n    return <CredentialView cred={state.cred} authority={props.authority} />;\r\n  }  else {\r\n    return (\r\n      <Alert severity=\"error\">\r\n        {props.authority.titles.invalid_signature_message}\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\n/*if (state.isValid) {\r\n    return (\r\n      <List className={classes.root}>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Issuer\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                <Grid container alignItems=\"center\" spacing={3}>\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"Flag\"\r\n                      src={`https://www.countryflags.io/${state.cred.issuer_code}/flat/32.png`}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>{state.cred.issuer_title}</Grid>\r\n                </Grid>\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider component=\"li\" />\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Issuance Date\"\r\n            secondary={<div className={classes.root}>{state.cred.iatDate}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Expiration Date\"\r\n            secondary={<div className={classes.root}>{state.cred.expDate}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Vehicle Registration Plate\"\r\n            secondary={<div className={classes.root}>{state.cred.vrp}</div>}\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Organization\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                {state.cred.org_id}-{state.cred.org_name}\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary=\"Type - Year\"\r\n            secondary={\r\n              <div className={classes.root}>\r\n                {state.cred.cred_type}-{state.cred.cred_year}\r\n              </div>\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    );\r\n  }\r\n  }*/\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CropFreeIcon from \"@material-ui/icons/CropFree\";\nimport { AppContext } from \"../context\";\nimport QrReader from \"react-qr-reader\";\nimport ScanResult from \"./ScanResult\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0)\n  },\n  paper: {\n    paddingBottom: 50\n  },\n  list: {\n    marginBottom: theme.spacing(2)\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0\n  },\n  grow: {\n    flexGrow: 1\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\"\n  }\n}));\n\nexport default function Scan() {\n  const classes = useStyles();\n  const { state } = React.useContext(AppContext);\n  const [pageState, setPageState] = useState({ page: \"scan\", data: \"\" });\n  async function handleScan(data) {\n    if (data) {\n     setPageState({ page: \"result\", data: data });\n    }\n  }\n  function handleError(err) {\n    console.error(err);\n  }\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square variant=\"outlined\" className={classes.paper}>\n        {pageState.page === \"result\" ? (\n          <ScanResult\n            data={pageState.data}\n            authority={state.authority}\n            revocations={state.revocations}\n          />\n        ) : (\n          <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ width: \"100%\" }}\n          />\n        )}\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n            <img\n              alt=\"Flag\"\n              src={`https://www.countryflags.io/${state.authority.id}/flat/32.png`}\n            />\n          </IconButton>\n          {state.authority.title}\n\n          {Object.keys(state.authority).length !== 0 && (\n            <Fab\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                //const cred = \"11Sk°*ÚK.R¸;E´( ??ªûAþ?´b»??¦6Í??¡aú¹???ÕZkèýØ· ¡ï??ÕÚ?±¶Gÿ\\\"ÑN*¸¦?ujWatrua16009056001608768000A142568742624255512020:06BB2545:A1425687426242555:AKANLAR ULUSLAR ARASI TASIMACILIK LIMITED SIRKETI:\";\n                //setPageState({ page: \"result\", data: cred });\n                setPageState({ page: \"scan\", data: \"\" });\n              }}\n            >\n              <CropFreeIcon />\n            </Fab>\n          )}\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport { AppProvider, AppContext } from \"./context\";\nimport SelectAuthority from \"./components/SelectAuthority\";\nimport Scan from \"./components/Scan\";\n\nfunction Page() {\n  const { state } = React.useContext(AppContext);\n  console.log(state);\n  return (\n    <React.Fragment>\n      {Object.keys(state.authority).length === 0 ? (\n        <SelectAuthority />\n      ) : (\n        <Scan />\n      )}\n    </React.Fragment>\n  );\n}\nfunction App() {\n  return (\n    <AppProvider>\n      <Page />\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}